{"id":"base.js","dependencies":[{"name":"C:\\Users\\Promise\\Documents\\Pyro Port\\package.json","includedInParent":true,"mtime":1656077642175},{"name":"airtable","loc":{"line":2,"column":23,"index":60},"parent":"C:\\Users\\Promise\\Documents\\Pyro Port\\src\\base.js","resolved":"C:\\Users\\Promise\\Documents\\Pyro Port\\node_modules\\airtable\\lib\\airtable.umd.js"}],"generated":{"js":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\n\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return generator._invoke = function (innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; }(innerFn, self, context), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; this._invoke = function (method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); }; } function maybeInvokeDelegate(delegate, context) { var method = delegate.iterator[context.method]; if (undefined === method) { if (context.delegate = null, \"throw\" === context.method) { if (delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method)) return ContinueSentinel; context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a 'throw' method\"); } return ContinueSentinel; } var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) { if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; } return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, define(Gp, \"constructor\", GeneratorFunctionPrototype), define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (object) { var keys = []; for (var key in object) { keys.push(key); } return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) { \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); } }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// import Airtable from 'airtable';\nvar Airtable = require('airtable'); // const { select } = require('../main');\n\n\nvar base = new Airtable({\n  apiKey: 'keyAFPRDIwNFDWk7A'\n}).base('app24ha3CNNPDxBBe');\nvar table = base('Registration');\n\nvar getRecords = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n    var _records$1$fields, _records$1$fields2, _records$1$fields3, _records$1$fields4;\n\n    var records, rod;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return table.select().firstPage();\n\n          case 2:\n            records = _context.sent;\n            // console.log(records);\n            // document.getElementsByClassName('table-section');\n            // console.log(records);\n            // records.forEach(record => (\n            // ))\n            document.querySelectorAll('.userName').innerText = (_records$1$fields = records[1].fields) === null || _records$1$fields === void 0 ? void 0 : _records$1$fields.Username;\n            document.querySelectorAll('.profession').innerText = (_records$1$fields2 = records[1].fields) === null || _records$1$fields2 === void 0 ? void 0 : _records$1$fields2.Profession;\n            document.querySelector('.userAbout').innerText = (_records$1$fields3 = records[1].fields) === null || _records$1$fields3 === void 0 ? void 0 : _records$1$fields3.About; // console.log(records[1]);\n\n            rod = (_records$1$fields4 = records[1].fields) === null || _records$1$fields4 === void 0 ? void 0 : _records$1$fields4.About; // console.log(rod)\n\n            console.log(document.querySelectorAll('.userName'));\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function getRecords() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\ngetRecords(); // const createRecord = async (fields) =>{\n//     const createdRecord = await table.create(fields);\n//     console.log(minifyRecord(createdRecord));\n// };\n// createRecord({\n//     Username: \"Promise\",\n//     // Profession: document.getElementById(\"profession\").value ,\n//     // About: document.getElementById(\"userDesc\").value,\n//     Profession: 'Promise',\n// })\n// const updateRecord =async(id, fields) =>{\n//     const updatedRecord = await table.update(id, fields);\n//     console.log(minifyRecord(updatedRecord));\n//     updateRecord('recIqYPwWwLQO505x',{\n//         Username: 'Updated!!'\n//     })\n// }\n\nvar minifyRecord = function minifyRecord(record) {\n  return {\n    id: record.id,\n    fields: record.fields\n  };\n}; // table.create([\n//     {\n//       \"fields\": {\n//         \"Feature\": \"Name\",\n//         \"Feature description\": \"Experiment with allowing users to choose which sounds go with which notifications, so they can easily understand what's happening without needed to re...\",\n//         \"Status\": \"Live\",\n//         \"Value\": \"High value\"\n//       }\n//     },\n//     {\n//       \"fields\": {\n//         \"Feature\": \"Skill Title\", \n//         \"Feature description\": \"Based on user research, we want to add options for increased security like 2FA and one-time passwwor\",\n//         \"Status\": \"In reviews\",\n//         \"Value\": \"Low value\"\n//       }\n//     }\n//   ], function(err, records) {\n//     if (err) {\n//       console.error(err);\n//       return;\n//     }\n//     records.forEach(function (record) {\n//       console.log(record.getId());\n//     });\n//   });"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":3,"column":47},"source":"base.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"base.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"base.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":4},"source":"base.js","original":{"line":2,"column":4},"name":"Airtable"},{"generated":{"line":10,"column":12},"source":"base.js","original":{"line":2,"column":12}},{"generated":{"line":10,"column":15},"source":"base.js","original":{"line":2,"column":15},"name":"require"},{"generated":{"line":10,"column":22},"source":"base.js","original":{"line":2,"column":22}},{"generated":{"line":10,"column":23},"source":"base.js","original":{"line":2,"column":23}},{"generated":{"line":10,"column":33},"source":"base.js","original":{"line":2,"column":22}},{"generated":{"line":10,"column":34},"source":"base.js","original":{"line":2,"column":0}},{"generated":{"line":10,"column":36},"source":"base.js","original":{"line":3,"column":0}},{"generated":{"line":13,"column":0},"source":"base.js","original":{"line":4,"column":0}},{"generated":{"line":13,"column":4},"source":"base.js","original":{"line":4,"column":4},"name":"base"},{"generated":{"line":13,"column":8},"source":"base.js","original":{"line":4,"column":8}},{"generated":{"line":13,"column":11},"source":"base.js","original":{"line":4,"column":11}},{"generated":{"line":13,"column":15},"source":"base.js","original":{"line":4,"column":15},"name":"Airtable"},{"generated":{"line":13,"column":23},"source":"base.js","original":{"line":4,"column":11}},{"generated":{"line":13,"column":24},"source":"base.js","original":{"line":4,"column":24}},{"generated":{"line":14,"column":2},"source":"base.js","original":{"line":4,"column":25},"name":"apiKey"},{"generated":{"line":14,"column":8},"source":"base.js","original":{"line":4,"column":31}},{"generated":{"line":14,"column":10},"source":"base.js","original":{"line":4,"column":33}},{"generated":{"line":15,"column":0},"source":"base.js","original":{"line":4,"column":24}},{"generated":{"line":15,"column":1},"source":"base.js","original":{"line":4,"column":11}},{"generated":{"line":15,"column":3},"source":"base.js","original":{"line":4,"column":55},"name":"base"},{"generated":{"line":15,"column":7},"source":"base.js","original":{"line":4,"column":11}},{"generated":{"line":15,"column":8},"source":"base.js","original":{"line":4,"column":60}},{"generated":{"line":15,"column":27},"source":"base.js","original":{"line":4,"column":11}},{"generated":{"line":15,"column":28},"source":"base.js","original":{"line":4,"column":0}},{"generated":{"line":16,"column":0},"source":"base.js","original":{"line":6,"column":0}},{"generated":{"line":16,"column":4},"source":"base.js","original":{"line":6,"column":6},"name":"table"},{"generated":{"line":16,"column":9},"source":"base.js","original":{"line":6,"column":11}},{"generated":{"line":16,"column":12},"source":"base.js","original":{"line":6,"column":14},"name":"base"},{"generated":{"line":16,"column":16},"source":"base.js","original":{"line":6,"column":18}},{"generated":{"line":16,"column":17},"source":"base.js","original":{"line":6,"column":19}},{"generated":{"line":16,"column":31},"source":"base.js","original":{"line":6,"column":18}},{"generated":{"line":16,"column":32},"source":"base.js","original":{"line":6,"column":0}},{"generated":{"line":18,"column":0},"source":"base.js","original":{"line":8,"column":0}},{"generated":{"line":18,"column":4},"source":"base.js","original":{"line":8,"column":6},"name":"getRecords"},{"generated":{"line":18,"column":14},"source":"base.js","original":{"line":8,"column":16}},{"generated":{"line":19,"column":2},"source":"base.js","original":{"line":8,"column":16}},{"generated":{"line":19,"column":72},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":20,"column":4},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":22,"column":4},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":23,"column":4},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":24,"column":6},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":25,"column":8},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":26,"column":10},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":27,"column":12},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":28,"column":12},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":28,"column":19},"source":"base.js","original":{"line":9,"column":27},"name":"table"},{"generated":{"line":28,"column":24},"source":"base.js","original":{"line":9,"column":32}},{"generated":{"line":28,"column":25},"source":"base.js","original":{"line":9,"column":33},"name":"select"},{"generated":{"line":28,"column":31},"source":"base.js","original":{"line":9,"column":27}},{"generated":{"line":28,"column":34},"source":"base.js","original":{"line":9,"column":42},"name":"firstPage"},{"generated":{"line":28,"column":43},"source":"base.js","original":{"line":9,"column":27}},{"generated":{"line":28,"column":45},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":30,"column":10},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":31,"column":12},"source":"base.js","original":{"line":9,"column":10},"name":"records"},{"generated":{"line":31,"column":19},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":32,"column":12},"source":"base.js","original":{"line":10,"column":4}},{"generated":{"line":33,"column":12},"source":"base.js","original":{"line":11,"column":4}},{"generated":{"line":34,"column":12},"source":"base.js","original":{"line":12,"column":4}},{"generated":{"line":35,"column":12},"source":"base.js","original":{"line":13,"column":4}},{"generated":{"line":36,"column":12},"source":"base.js","original":{"line":15,"column":4}},{"generated":{"line":37,"column":12},"source":"base.js","original":{"line":16,"column":4},"name":"document"},{"generated":{"line":37,"column":20},"source":"base.js","original":{"line":16,"column":12}},{"generated":{"line":37,"column":21},"source":"base.js","original":{"line":16,"column":13},"name":"querySelectorAll"},{"generated":{"line":37,"column":37},"source":"base.js","original":{"line":16,"column":4}},{"generated":{"line":37,"column":38},"source":"base.js","original":{"line":16,"column":30}},{"generated":{"line":37,"column":49},"source":"base.js","original":{"line":16,"column":4}},{"generated":{"line":37,"column":51},"source":"base.js","original":{"line":16,"column":43},"name":"innerText"},{"generated":{"line":37,"column":60},"source":"base.js","original":{"line":16,"column":4}},{"generated":{"line":37,"column":84},"source":"base.js","original":{"line":16,"column":55},"name":"records"},{"generated":{"line":37,"column":91},"source":"base.js","original":{"line":16,"column":62}},{"generated":{"line":37,"column":92},"source":"base.js","original":{"line":16,"column":63}},{"generated":{"line":37,"column":93},"source":"base.js","original":{"line":16,"column":62}},{"generated":{"line":37,"column":94},"source":"base.js","original":{"line":16,"column":55}},{"generated":{"line":37,"column":95},"source":"base.js","original":{"line":16,"column":66},"name":"fields"},{"generated":{"line":37,"column":101},"source":"base.js","original":{"line":16,"column":4}},{"generated":{"line":37,"column":155},"source":"base.js","original":{"line":16,"column":55}},{"generated":{"line":37,"column":173},"source":"base.js","original":{"line":16,"column":74},"name":"Username"},{"generated":{"line":37,"column":181},"source":"base.js","original":{"line":16,"column":4}},{"generated":{"line":38,"column":12},"source":"base.js","original":{"line":17,"column":4},"name":"document"},{"generated":{"line":38,"column":20},"source":"base.js","original":{"line":17,"column":12}},{"generated":{"line":38,"column":21},"source":"base.js","original":{"line":17,"column":13},"name":"querySelectorAll"},{"generated":{"line":38,"column":37},"source":"base.js","original":{"line":17,"column":4}},{"generated":{"line":38,"column":38},"source":"base.js","original":{"line":17,"column":30}},{"generated":{"line":38,"column":51},"source":"base.js","original":{"line":17,"column":4}},{"generated":{"line":38,"column":53},"source":"base.js","original":{"line":17,"column":45},"name":"innerText"},{"generated":{"line":38,"column":62},"source":"base.js","original":{"line":17,"column":4}},{"generated":{"line":38,"column":87},"source":"base.js","original":{"line":17,"column":57},"name":"records"},{"generated":{"line":38,"column":94},"source":"base.js","original":{"line":17,"column":64}},{"generated":{"line":38,"column":95},"source":"base.js","original":{"line":17,"column":65}},{"generated":{"line":38,"column":96},"source":"base.js","original":{"line":17,"column":64}},{"generated":{"line":38,"column":97},"source":"base.js","original":{"line":17,"column":57}},{"generated":{"line":38,"column":98},"source":"base.js","original":{"line":17,"column":68},"name":"fields"},{"generated":{"line":38,"column":104},"source":"base.js","original":{"line":17,"column":4}},{"generated":{"line":38,"column":159},"source":"base.js","original":{"line":17,"column":57}},{"generated":{"line":38,"column":178},"source":"base.js","original":{"line":17,"column":76},"name":"Profession"},{"generated":{"line":38,"column":188},"source":"base.js","original":{"line":17,"column":4}},{"generated":{"line":39,"column":12},"source":"base.js","original":{"line":18,"column":4},"name":"document"},{"generated":{"line":39,"column":20},"source":"base.js","original":{"line":18,"column":12}},{"generated":{"line":39,"column":21},"source":"base.js","original":{"line":18,"column":13},"name":"querySelector"},{"generated":{"line":39,"column":34},"source":"base.js","original":{"line":18,"column":4}},{"generated":{"line":39,"column":35},"source":"base.js","original":{"line":18,"column":27}},{"generated":{"line":39,"column":47},"source":"base.js","original":{"line":18,"column":4}},{"generated":{"line":39,"column":49},"source":"base.js","original":{"line":18,"column":41},"name":"innerText"},{"generated":{"line":39,"column":58},"source":"base.js","original":{"line":18,"column":4}},{"generated":{"line":39,"column":83},"source":"base.js","original":{"line":18,"column":53},"name":"records"},{"generated":{"line":39,"column":90},"source":"base.js","original":{"line":18,"column":60}},{"generated":{"line":39,"column":91},"source":"base.js","original":{"line":18,"column":61}},{"generated":{"line":39,"column":92},"source":"base.js","original":{"line":18,"column":60}},{"generated":{"line":39,"column":93},"source":"base.js","original":{"line":18,"column":53}},{"generated":{"line":39,"column":94},"source":"base.js","original":{"line":18,"column":64},"name":"fields"},{"generated":{"line":39,"column":100},"source":"base.js","original":{"line":18,"column":4}},{"generated":{"line":39,"column":155},"source":"base.js","original":{"line":18,"column":53}},{"generated":{"line":39,"column":174},"source":"base.js","original":{"line":18,"column":72},"name":"About"},{"generated":{"line":39,"column":179},"source":"base.js","original":{"line":18,"column":4}},{"generated":{"line":39,"column":180},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":39,"column":181},"source":"base.js","original":{"line":19,"column":4}},{"generated":{"line":41,"column":12},"source":"base.js","original":{"line":21,"column":8},"name":"rod"},{"generated":{"line":41,"column":15},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":41,"column":40},"source":"base.js","original":{"line":21,"column":14},"name":"records"},{"generated":{"line":41,"column":47},"source":"base.js","original":{"line":21,"column":21}},{"generated":{"line":41,"column":48},"source":"base.js","original":{"line":21,"column":22}},{"generated":{"line":41,"column":49},"source":"base.js","original":{"line":21,"column":21}},{"generated":{"line":41,"column":50},"source":"base.js","original":{"line":21,"column":14}},{"generated":{"line":41,"column":51},"source":"base.js","original":{"line":21,"column":25},"name":"fields"},{"generated":{"line":41,"column":57},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":41,"column":112},"source":"base.js","original":{"line":21,"column":14}},{"generated":{"line":41,"column":131},"source":"base.js","original":{"line":21,"column":33},"name":"About"},{"generated":{"line":41,"column":136},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":41,"column":138},"source":"base.js","original":{"line":22,"column":4}},{"generated":{"line":43,"column":12},"source":"base.js","original":{"line":23,"column":4},"name":"console"},{"generated":{"line":43,"column":19},"source":"base.js","original":{"line":23,"column":11}},{"generated":{"line":43,"column":20},"source":"base.js","original":{"line":23,"column":12},"name":"log"},{"generated":{"line":43,"column":23},"source":"base.js","original":{"line":23,"column":4}},{"generated":{"line":43,"column":24},"source":"base.js","original":{"line":23,"column":16},"name":"document"},{"generated":{"line":43,"column":32},"source":"base.js","original":{"line":23,"column":24}},{"generated":{"line":43,"column":33},"source":"base.js","original":{"line":23,"column":25},"name":"querySelectorAll"},{"generated":{"line":43,"column":49},"source":"base.js","original":{"line":23,"column":16}},{"generated":{"line":43,"column":50},"source":"base.js","original":{"line":23,"column":42}},{"generated":{"line":43,"column":61},"source":"base.js","original":{"line":23,"column":16}},{"generated":{"line":43,"column":62},"source":"base.js","original":{"line":23,"column":4}},{"generated":{"line":45,"column":10},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":46,"column":10},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":47,"column":12},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":48,"column":8},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":49,"column":6},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":50,"column":4},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":51,"column":2},"source":"base.js","original":{"line":8,"column":19}},{"generated":{"line":51,"column":3},"source":"base.js","original":{"line":8,"column":16}},{"generated":{"line":53,"column":2},"source":"base.js","original":{"line":8,"column":16}},{"generated":{"line":53,"column":18},"source":"base.js","original":{"line":8,"column":6},"name":"getRecords"},{"generated":{"line":53,"column":28},"source":"base.js","original":{"line":8,"column":16}},{"generated":{"line":54,"column":4},"source":"base.js","original":{"line":8,"column":16}},{"generated":{"line":55,"column":2},"source":"base.js","original":{"line":8,"column":16}},{"generated":{"line":56,"column":0},"source":"base.js","original":{"line":8,"column":16}},{"generated":{"line":56,"column":3},"source":"base.js","original":{"line":8,"column":0}},{"generated":{"line":58,"column":0},"source":"base.js","original":{"line":25,"column":0},"name":"getRecords"},{"generated":{"line":58,"column":10},"source":"base.js","original":{"line":25,"column":10}},{"generated":{"line":58,"column":14},"source":"base.js","original":{"line":28,"column":0}},{"generated":{"line":59,"column":0},"source":"base.js","original":{"line":29,"column":0}},{"generated":{"line":60,"column":0},"source":"base.js","original":{"line":30,"column":0}},{"generated":{"line":61,"column":0},"source":"base.js","original":{"line":32,"column":0}},{"generated":{"line":62,"column":0},"source":"base.js","original":{"line":33,"column":0}},{"generated":{"line":63,"column":0},"source":"base.js","original":{"line":34,"column":0}},{"generated":{"line":64,"column":0},"source":"base.js","original":{"line":35,"column":0}},{"generated":{"line":65,"column":0},"source":"base.js","original":{"line":36,"column":0}},{"generated":{"line":66,"column":0},"source":"base.js","original":{"line":37,"column":0}},{"generated":{"line":67,"column":0},"source":"base.js","original":{"line":38,"column":0}},{"generated":{"line":68,"column":0},"source":"base.js","original":{"line":40,"column":0}},{"generated":{"line":69,"column":0},"source":"base.js","original":{"line":41,"column":0}},{"generated":{"line":70,"column":0},"source":"base.js","original":{"line":42,"column":0}},{"generated":{"line":71,"column":0},"source":"base.js","original":{"line":43,"column":0}},{"generated":{"line":72,"column":0},"source":"base.js","original":{"line":44,"column":0}},{"generated":{"line":73,"column":0},"source":"base.js","original":{"line":45,"column":0}},{"generated":{"line":74,"column":0},"source":"base.js","original":{"line":46,"column":0}},{"generated":{"line":76,"column":0},"source":"base.js","original":{"line":48,"column":0}},{"generated":{"line":76,"column":4},"source":"base.js","original":{"line":48,"column":6},"name":"minifyRecord"},{"generated":{"line":76,"column":16},"source":"base.js","original":{"line":48,"column":18}},{"generated":{"line":76,"column":19},"source":"base.js","original":{"line":48,"column":21}},{"generated":{"line":76,"column":28},"source":"base.js","original":{"line":48,"column":6},"name":"minifyRecord"},{"generated":{"line":76,"column":40},"source":"base.js","original":{"line":48,"column":21}},{"generated":{"line":76,"column":41},"source":"base.js","original":{"line":48,"column":22},"name":"record"},{"generated":{"line":76,"column":47},"source":"base.js","original":{"line":48,"column":21}},{"generated":{"line":76,"column":49},"source":"base.js","original":{"line":48,"column":31}},{"generated":{"line":77,"column":2},"source":"base.js","original":{"line":49,"column":4}},{"generated":{"line":77,"column":9},"source":"base.js","original":{"line":49,"column":10}},{"generated":{"line":78,"column":4},"source":"base.js","original":{"line":50,"column":8},"name":"id"},{"generated":{"line":78,"column":6},"source":"base.js","original":{"line":50,"column":10}},{"generated":{"line":78,"column":8},"source":"base.js","original":{"line":50,"column":12},"name":"record"},{"generated":{"line":78,"column":14},"source":"base.js","original":{"line":50,"column":18}},{"generated":{"line":78,"column":15},"source":"base.js","original":{"line":50,"column":19},"name":"id"},{"generated":{"line":78,"column":17},"source":"base.js","original":{"line":49,"column":10}},{"generated":{"line":79,"column":4},"source":"base.js","original":{"line":51,"column":8},"name":"fields"},{"generated":{"line":79,"column":10},"source":"base.js","original":{"line":51,"column":14}},{"generated":{"line":79,"column":12},"source":"base.js","original":{"line":51,"column":16},"name":"record"},{"generated":{"line":79,"column":18},"source":"base.js","original":{"line":51,"column":22}},{"generated":{"line":79,"column":19},"source":"base.js","original":{"line":51,"column":23},"name":"fields"},{"generated":{"line":80,"column":2},"source":"base.js","original":{"line":49,"column":10}},{"generated":{"line":80,"column":3},"source":"base.js","original":{"line":49,"column":4}},{"generated":{"line":81,"column":0},"source":"base.js","original":{"line":53,"column":1}},{"generated":{"line":81,"column":1},"source":"base.js","original":{"line":48,"column":0}},{"generated":{"line":81,"column":3},"source":"base.js","original":{"line":56,"column":0}},{"generated":{"line":82,"column":0},"source":"base.js","original":{"line":57,"column":0}},{"generated":{"line":83,"column":0},"source":"base.js","original":{"line":58,"column":0}},{"generated":{"line":84,"column":0},"source":"base.js","original":{"line":59,"column":0}},{"generated":{"line":85,"column":0},"source":"base.js","original":{"line":60,"column":0}},{"generated":{"line":86,"column":0},"source":"base.js","original":{"line":61,"column":0}},{"generated":{"line":87,"column":0},"source":"base.js","original":{"line":62,"column":0}},{"generated":{"line":88,"column":0},"source":"base.js","original":{"line":63,"column":0}},{"generated":{"line":89,"column":0},"source":"base.js","original":{"line":64,"column":0}},{"generated":{"line":90,"column":0},"source":"base.js","original":{"line":65,"column":0}},{"generated":{"line":91,"column":0},"source":"base.js","original":{"line":66,"column":0}},{"generated":{"line":92,"column":0},"source":"base.js","original":{"line":67,"column":0}},{"generated":{"line":93,"column":0},"source":"base.js","original":{"line":68,"column":0}},{"generated":{"line":94,"column":0},"source":"base.js","original":{"line":69,"column":0}},{"generated":{"line":95,"column":0},"source":"base.js","original":{"line":70,"column":0}},{"generated":{"line":96,"column":0},"source":"base.js","original":{"line":71,"column":0}},{"generated":{"line":97,"column":0},"source":"base.js","original":{"line":72,"column":0}},{"generated":{"line":98,"column":0},"source":"base.js","original":{"line":73,"column":0}},{"generated":{"line":99,"column":0},"source":"base.js","original":{"line":74,"column":0}},{"generated":{"line":100,"column":0},"source":"base.js","original":{"line":75,"column":0}},{"generated":{"line":101,"column":0},"source":"base.js","original":{"line":76,"column":0}},{"generated":{"line":102,"column":0},"source":"base.js","original":{"line":77,"column":0}},{"generated":{"line":103,"column":0},"source":"base.js","original":{"line":78,"column":0}},{"generated":{"line":104,"column":0},"source":"base.js","original":{"line":79,"column":0}},{"generated":{"line":105,"column":0},"source":"base.js","original":{"line":80,"column":0}},{"generated":{"line":106,"column":0},"source":"base.js","original":{"line":81,"column":0}}],"sources":{"base.js":"// import Airtable from 'airtable';\r\nvar Airtable = require('airtable');\r\n// const { select } = require('../main');\r\nvar base = new Airtable({apiKey: 'keyAFPRDIwNFDWk7A'}).base('app24ha3CNNPDxBBe');\r\n\r\nconst table = base('Registration');\r\n\r\nconst getRecords = async() => {\r\n    const records  = await table.select().firstPage();\r\n    // console.log(records);\r\n    // document.getElementsByClassName('table-section');\r\n    // console.log(records);\r\n    // records.forEach(record => (\r\n\r\n    // ))\r\n    document.querySelectorAll('.userName').innerText = records[1].fields?.Username;\r\n    document.querySelectorAll('.profession').innerText = records[1].fields?.Profession;\r\n    document.querySelector('.userAbout').innerText = records[1].fields?.About;\r\n    // console.log(records[1]);\r\n\r\n    let rod = records[1].fields?.About;\r\n    // console.log(rod)\r\n    console.log(document.querySelectorAll('.userName'))\r\n};\r\ngetRecords(); \r\n\r\n\r\n// const createRecord = async (fields) =>{\r\n//     const createdRecord = await table.create(fields);\r\n//     console.log(minifyRecord(createdRecord));\r\n\r\n// };\r\n// createRecord({\r\n//     Username: \"Promise\",\r\n//     // Profession: document.getElementById(\"profession\").value ,\r\n//     // About: document.getElementById(\"userDesc\").value,\r\n//     Profession: 'Promise',\r\n// })\r\n\r\n// const updateRecord =async(id, fields) =>{\r\n//     const updatedRecord = await table.update(id, fields);\r\n//     console.log(minifyRecord(updatedRecord));\r\n//     updateRecord('recIqYPwWwLQO505x',{\r\n//         Username: 'Updated!!'\r\n//     })\r\n// }\r\n\r\nconst minifyRecord = (record)=>{\r\n    return{\r\n        id: record.id,\r\n        fields: record.fields,\r\n    };\r\n}\r\n\r\n\r\n// table.create([\r\n//     {\r\n//       \"fields\": {\r\n//         \"Feature\": \"Name\",\r\n//         \"Feature description\": \"Experiment with allowing users to choose which sounds go with which notifications, so they can easily understand what's happening without needed to re...\",\r\n//         \"Status\": \"Live\",\r\n//         \"Value\": \"High value\"\r\n//       }\r\n//     },\r\n//     {\r\n//       \"fields\": {\r\n//         \"Feature\": \"Skill Title\", \r\n//         \"Feature description\": \"Based on user research, we want to add options for increased security like 2FA and one-time passwwor\",\r\n//         \"Status\": \"In reviews\",\r\n//         \"Value\": \"Low value\"\r\n//       }\r\n//     }\r\n//   ], function(err, records) {\r\n//     if (err) {\r\n//       console.error(err);\r\n//       return;\r\n//     }\r\n//     records.forEach(function (record) {\r\n//       console.log(record.getId());\r\n//     });\r\n//   });\r\n\r\n    "},"lineCount":null}},"error":null,"hash":"491a6b87d9ffe2647fc2ff7b88bc152d","cacheData":{"env":{}}}